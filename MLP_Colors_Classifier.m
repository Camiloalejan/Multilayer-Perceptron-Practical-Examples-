% Camilo Alejandro Hernández Salazar - 214019774
%% Multilayer Perceptron (MLP) Network para clasificación de colores 
clc; clear; close all; 

sigmoide = @(v,a) 1./(1+exp(-v*a));

X_RGB = [44 190 34; 45 205 34; 45 203 35; 44 198 33; 45 200 34;
         113 88 36; 107 89 35; 105 86 35; 71 68 27; 51 58 23;
         173 212 49; 180 209 49; 183 216 50; 179 204 48; 167 183 46;
         161 253 57; 73 177 36; 82 185 38; 136 244 54; 92 210 42;
         30 43 15; 33 46 16; 31 42 16; 33 44 17; 29 41 15;
         121 81 23; 30 62 19; 79 61 21; 67 58 20; 77 66 24;
         268 343 90; 268 345 95; 270 347 92; 264 337 90; 253 340 91;
         27 32 10; 27 31 10; 30 35 11; 28 32 10; 28 34 11]';
     
for i = 1:40
    X_RGB(1,i) = (X_RGB(1,i)-mean(X_RGB(:,i)))/(max(X_RGB(:,i))-min(X_RGB(:,i)));
    X_RGB(2,i) = (X_RGB(2,i)-mean(X_RGB(:,i)))/(max(X_RGB(:,i))-min(X_RGB(:,i)));
    X_RGB(3,i) = (X_RGB(3,i)-mean(X_RGB(:,i)))/(max(X_RGB(:,i))-min(X_RGB(:,i)));
end
    
d = [1 0 0 0 0 0 0 0; 1 0 0 0 0 0 0 0; 1 0 0 0 0 0 0 0; 1 0 0 0 0 0 0 0; 1 0 0 0 0 0 0 0;
     0 1 0 0 0 0 0 0; 0 1 0 0 0 0 0 0; 0 1 0 0 0 0 0 0; 0 1 0 0 0 0 0 0; 0 1 0 0 0 0 0 0; 
     0 0 1 0 0 0 0 0; 0 0 1 0 0 0 0 0; 0 0 1 0 0 0 0 0; 0 0 1 0 0 0 0 0; 0 0 1 0 0 0 0 0; 
     0 0 0 1 0 0 0 0; 0 0 0 1 0 0 0 0; 0 0 0 1 0 0 0 0; 0 0 0 1 0 0 0 0; 0 0 0 1 0 0 0 0;
     0 0 0 0 1 0 0 0; 0 0 0 0 1 0 0 0; 0 0 0 0 1 0 0 0; 0 0 0 0 1 0 0 0; 0 0 0 0 1 0 0 0; 
     0 0 0 0 0 1 0 0; 0 0 0 0 0 1 0 0; 0 0 0 0 0 1 0 0; 0 0 0 0 0 1 0 0; 0 0 0 0 0 1 0 0; 
     0 0 0 0 0 0 1 0; 0 0 0 0 0 0 1 0; 0 0 0 0 0 0 1 0; 0 0 0 0 0 0 1 0; 0 0 0 0 0 0 1 0; 
     0 0 0 0 0 0 0 1; 0 0 0 0 0 0 0 1; 0 0 0 0 0 0 0 1; 0 0 0 0 0 0 0 1; 0 0 0 0 0 0 0 1;];
 
nK = 40; nP = 3; nS = 8; nO = 10; eta = 0.35; a = .95;

wO = rand(nP+1, nO);
wS = rand(nO+1, nS);

for i = 1:100000
    for k = 1:nK
        
        xO = [1; X_RGB(:,k)];
        vO = wO'*xO;
        yO = tanh(vO);
        
        xS = [1; yO];
        vS = wS'*xS;
        yS = sigmoide(vS,a);
        [~,ind] = max(yS);
        
        e = d(k,:)' - yS;
        deltaS = e.*(yS.*(1-yS));
        deltaO = ((ones(nO,1) - yO).*(ones(nO,1)+yO)).*(wS(2:end,:)*deltaS);
        
        wS = wS + eta*(deltaS*xS')';
        wO = wO + eta*(deltaO*xO')';
    end
end

%% Comprobación 
 
wO = [10.0541562419404,4.12923930209830,10.1198417882517,2.90642995135198,13.7149292167848,-13.5497517540710,7.42702332473081,-10.3422083105547,4.16457438328194,-27.2987853552197;-18.8438325144265,7.26471347881771,0.463661356332837,-12.9424915756250,-0.204816714185514,1.48256064548222,11.3554393165872,-21.7063790289423,18.1583385265165,19.2903533775749;-18.8050645995008,-19.4695232851115,-32.3805377283875,-8.98821957348745,-36.0636524492072,39.6300219271220,-30.3018888414829,21.6287713880036,-8.17862665612493,41.0652195368147;10.1303102319173,3.16044366964385,11.0371979203016,-0.123169508501244,9.00403074064784,-12.7333592200718,6.19834742565526,2.04047468559043,-1.76795010886825,-0.233406988520632];
wS = [-3.96006198870846,1.54204824249344,-6.89451683968616,-8.10116151537384,-4.67732719014580,-14.1988592336585,-10.7596471434461,-13.0823248864813;-2.34798753494878,4.48170809711878,8.83029075031661,-3.18202468285577,2.51949997907518,-16.7575202088031,1.73826935670926,1.80496526834738;3.74273163888944,6.34382264147019,4.07977394610720,8.36568319232971,5.99847178539197,-0.784965807186256,8.78943496425830,11.8475241008073;-2.55250748070452,5.14868674947200,-2.13202859679496,-3.70644218977132,6.02318918531976,-4.93189142699980,-1.32691646404534,-7.68627706973508;9.72828152703165,1.32427549653117,2.90134497048959,-9.33447926607089,-7.76727170566323,5.96554679455813,-3.45052931078860,9.14475161861074;-3.69693534984784,8.54746264862701,-2.28298882996974,-6.00016673238448,10.5898481959331,-3.99756201428983,-1.91122952806470,-7.93772649294994;3.38806299972828,-6.95340630536064,2.64968507732122,6.90645095439056,-4.66757630138627,6.44345871291844,3.76144363317545,7.40900271068032;4.52119652509812,5.82818273806510,2.58638442699581,7.94861227554032,6.48814599510801,-8.64097498254972,9.18627655415956,10.0632064829559;-0.917162402372498,-3.77592460613143,7.41870764045319,-1.61892222143646,6.15907808190546,-6.46618614907859,16.2035243997232,-12.0174241065484;-6.21982575641926,6.36969962975961,5.37480861335214,-13.1360937743607,-6.78521935653013,-2.62165817402694,14.1455740312301,18.7151489871296;1.19383574163537,-1.00372728026114,14.0917944056589,-1.16778855040600,-7.34962569154822,0.968922371556292,-8.41514166590307,-15.8696047891863];

for i = 1:3
    r = input('digite la frecuencia R ');
    g = input('digite la frecuencia G ');
    b = input('digite la frecuencia B ');
    xg = [r g b]';
    for j = 1:3
        xg(j) = (xg(j)-mean(xg))/(max(xg)-min(xg));
    end
    xO = [1; xg];
            vO = wO'*xO;
            yO = tanh(vO);
            xS = [1; yO];
            vS = wS'*xS;
            yS = sigmoide(vS,a)';
            [~,ind] = max(yS);
            
            if ind == 1
                plot3(xg(1),xg(2),xg(3),'r.','Markersize',40)
            elseif ind == 2
                plot3(xg(1),xg(2),xg(3),'g.','Markersize',40)
            elseif ind == 3
                plot3(xg(1),xg(2),xg(3),'b.','Markersize',40)
            elseif ind == 4
                plot3(xg(1),xg(2),xg(3),'m.','Markersize',40)
            elseif ind == 5
                plot3(xg(1),xg(2),xg(3),'y.','Markersize',40)
            elseif ind == 6
                plot3(xg(1),xg(2),xg(3),'c.','Markersize',40)
            elseif ind == 7
                plot3(xg(1),xg(2),xg(3),'k.','Markersize',40)
            elseif ind == 8
                plot3(xg(1),xg(2),xg(3),'ko','Markersize',20)
            end
    display(ind)
    
end

%% Generalización
hold on
grid on
axis([0, 6, 0, 6, 0, 6]) 

for i=0:2.5:255
    for j = 0:2.5:255
        for k = 0:2.5:255
            xg = [i; j; k];
            for l = 1:3
                xg(l) = (xg(l)-mean(xg))/(max(xg)-min(xg));
            end
            xO = [1; xg];
            vO = wO'*xO;
            yO = tanh(vO);
            xS = [1; yO];
            vS = wS'*xS;
            yS = sigmoide(vS,a)';
            [~,ind] = max(yS);
            
            if ind == 1
                plot3(xg(1),xg(2),xg(3),'r.','Markersize',10)
            elseif ind == 2
                plot3(xg(1),xg(2),xg(3),'g.','Markersize',10)
            elseif ind == 3
                plot3(xg(1),xg(2),xg(3),'b.','Markersize',10)
            elseif ind == 4
                plot3(xg(1),xg(2),xg(3),'m.','Markersize',10)
            elseif ind == 5
                plot3(xg(1),xg(2),xg(3),'y.','Markersize',10)
            elseif ind == 6
                plot3(xg(1),xg(2),xg(3),'c.','Markersize',10)
            elseif ind == 7
                plot3(xg(1),xg(2),xg(3),'k.','Markersize',10)
            elseif ind == 8
                plot3(xg(1),xg(2),xg(3),'ko','Markersize',4)
            end
        end
    end
end
